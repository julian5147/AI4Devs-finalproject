name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd backend
        npm ci

    - name: Run tests
      run: |
        cd backend
        npm test

    - name: Build application
      if: success()
      run: |
        cd backend
        npm run build
        npm prune --production

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        echo "Deploying to EC2 instance..."
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} 'mkdir -p ~/backend'
        scp -i private_key -o StrictHostKeyChecking=no -r backend/* ${USER}@${HOST}:~/backend
        ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} << 'EOF'

            # Install Nginx if not already installed
            if ! command -v nginx &> /dev/null; then
            sudo yum update
            sudo yum install -y nginx
            fi

            # Ensure Nginx config directory exists
            sudo mkdir -p /etc/nginx/sites-available
            sudo mkdir -p /etc/nginx/sites-enabled

            # Configure Nginx as a reverse proxy using a one-liner
            echo 'server {
                listen 80;
                server_name ${{ secrets.EC2_INSTANCE }};
                
                location / {
                    proxy_pass http://localhost:8080;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                }
            }' | sudo tee /etc/nginx/conf.d/app.conf > /dev/null

            # Enable the site configuration
            sudo ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default

            # Restart Nginx to apply the new configuration
            sudo systemctl restart nginx

            # Install PM2 if not already installed
            if ! command -v pm2 &> /dev/null; then
            sudo npm install -g pm2
            fi

            # Stop the application if it's running
            pm2 stop all || true

            cd ~/backend

            # Install dependencies and run the application with PM2 on port 8080
            pm2 start npm start:prod -- start -- --port 8080
        EOF
